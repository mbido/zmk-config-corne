/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        macro_a_grave: macro_a_grave {
            label = "à";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 133>;
        };
        macro_a_acute: macro_a_acute {
            label = "á";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 160>;
        };
        macro_a_circumflex: macro_a_circumflex {
            label = "â";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 131>;
        };
        macro_A_grave: macro_A_grave {
            label = "À";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 192>;
        };
        macro_A_acute: macro_A_acute {
            label = "Á";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 193>;
        };
        macro_A_circumflex: macro_A_circumflex {
            label = "Â";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 194>;
        };
        macro_e_acute: macro_e_acute {
            label = "é";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 130>;
        };
        macro_e_grave: macro_e_grave {
            label = "è";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 138>;
        };
        macro_e_circumflex: macro_e_circumflex {
            label = "ê";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 136>;
        };
        macro_e_diaeresis: macro_e_diaeresis {
            label = "ë";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 137>;
        };
        macro_E_acute: macro_E_acute {
            label = "É";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 144>;
        };
        macro_E_grave: macro_E_grave {
            label = "È";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 200>;
        };
        macro_E_circumflex: macro_E_circumflex {
            label = "Ê";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 201>;
        };
        macro_E_diaeresis: macro_E_diaeresis {
            label = "Ë";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 203>;
        };
        macro_i_circumflex: macro_i_circumflex {
            label = "î";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 140>;
        };
        macro_i_diaeresis: macro_i_diaeresis {
            label = "ï";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 139>;
        };
        macro_I_circumflex: macro_I_circumflex {
            label = "Î";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 206>;
        };
        macro_I_diaeresis: macro_I_diaeresis {
            label = "Ï";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 207>;
        };
        macro_o_acute: macro_o_acute {
            label = "ó";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 162>;
        };
        macro_o_circumflex: macro_o_circumflex {
            label = "ô";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 147>;
        };
        macro_O_acute: macro_O_acute {
            label = "Ó";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 211>;
        };
        macro_O_circumflex: macro_O_circumflex {
            label = "Ô";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 212>;
        };
        macro_u_grave: macro_u_grave {
            label = "ù";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 151>;
        };
        macro_u_circumflex: macro_u_circumflex {
            label = "û";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 150>;
        };
        macro_U_grave: macro_U_grave {
            label = "Ù";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 217>;
        };
        macro_U_circumflex: macro_U_circumflex {
            label = "Û";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 219>;
        };
        macro_ae: macro_ae {
            label = "æ";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 145>;
        };
        macro_AE: macro_AE {
            label = "Æ";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 146>;
        };
        macro_c_cedilla: macro_c_cedilla {
            label = "ç";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 135>;
        };
        macro_left_quotation: macro_left_quotation {
            label = "«";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 174>;
        };
        macro_right_quotation: macro_right_quotation {
            label = "»";
            compatible = "zmk,behavior-macro";
            bindings = <&kp LEFT_ALT>, <&kp 175>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        L0 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Y  &kp C  &kp L             &kp M           &kp K        &kp Z    &kp F            &kp U                 &td MINUS COMMA      &td QUESTION SEMICOLON  &none
&none  &kp I  &kp S  &hm LEFT_ALT R    &hm LEFT_GUI T  &kp G        &kp P    &hm RIGHT_GUI N  &hm RIGHT_ALT E       &kp A                &kp O                   &none
&none  &kp Q  &kp V  &kp W             &kp D           &kp J        &kp B    &kp H            &td UNDERSCORE SLASH  &td EXCLAMATION DOT  &kp X                   &none
                     &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp SPACE    &kp RET  &to 1            &kp BACKSPACE
            >;
        };

        L1 {
            bindings = <
&none  &kp ESC    &kp AT         &kp PERCENT     &kp KP_NUMBER_0       &kp KP_NUMBER_1      &kp KP_NUMBER_2   &kp KP_NUMBER_3                 &kp KP_NUMBER_4  &kp LESS_THAN  &kp COLON     &none
&none  &kp TAB    &kp EQUAL      &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES    &kp SINGLE_QUOTE  &hm LEFT_GUI RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp PLUS       &kp ASTERISK  &none
&none  &kp TILDE  &kp AMPERSAND  &kp PIPE        &kp LEFT              &kp DOLLAR           &kp HASH          &kp RIGHT                       &kp BACKSLASH    &kp GRAVE      &to 2         &none
                                 &kp LCTRL       &kp LEFT_SHIFT        &to 0                &mo 4             &to 3                           &kp RIGHT_ALT
            >;
        };

        L2 {
            bindings = <
&macro_a_grave  &macro_a_acute  &macro_a_circumflex  &macro_A_grave  &macro_A_acute  &macro_A_circumflex  &macro_e_acute  &macro_e_grave  &macro_e_circumflex  &macro_e_diaeresis  &macro_E_acute  &macro_E_grave
&macro_E_circumflex  &macro_E_diaeresis  &macro_i_circumflex  &macro_i_diaeresis  &macro_I_circumflex  &macro_I_diaeresis  &macro_o_acute  &macro_o_circumflex  &macro_O_acute  &macro_O_circumflex  &macro_u_grave  &macro_u_circumflex
&macro_U_grave  &macro_U_circumflex  &macro_ae  &macro_AE  &macro_c_cedilla  &macro_left_quotation  &macro_right_quotation  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &to 0    &trans  &trans  &trans
            >;
        };

        L3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_11 {
            bindings = <
&none  &kp ESC    &kp AT         &kp PERCENT     &kp KP_NUMBER_5   &kp KP_NUMBER_6      &kp KP_NUMBER_7   &kp KP_NUMBER_8    &kp KP_NUMBER_9  &kp GREATER_THAN  &kp COLON  &none
&none  &kp TAB    &kp EQUAL      &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp DOUBLE_QUOTES    &kp SINGLE_QUOTE  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp PLUS          &kp CARET  &none
&none  &kp TILDE  &kp AMPERSAND  &kp PIPE        &kp UP_ARROW      &kp DOLLAR           &kp HASH          &kp DOWN           &kp BACKSLASH    &kp PIPE          &to 2      &none
                                 &kp LCTRL       &kp LEFT_SHIFT    &to 0                &none             &to 3              &kp RIGHT_ALT
            >;
        };
    };
};
